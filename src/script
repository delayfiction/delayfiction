#!/usr/bin/env ruby

require 'fileutils'
require_relative 'models/base.rb'
require_relative 'models/issue.rb'
require_relative 'models/post.rb'
require_relative 'models/static.rb'
require_relative 'models/volume.rb'

Base.set_source_dir(File.join(Dir.pwd, 'src'))
Base.set_dest_dir(File.join(Dir.pwd, 'docs'))

ARGV[0] == "local" ?
  Base.set_host(File.join(Dir.pwd, 'docs')) :
  Base.set_host("https://delayfiction.org")

# copy assets to the right places
`cp -r #{File.join Base.source_dir, 'assets', '.'} #{File.join Base.dest_dir, 'assets'}`
`cp -r #{File.join Base.source_dir, 'auto_assets', '.'} #{File.join Base.dest_dir}`

Volume.all(File.join(Base.source_dir, 'data', 'volumes')).each do |volume|
  File.write(
    File.join(Base.dest_dir, (volume.id + '.html')),
    volume.render('show-volume')
  )
end

Issue.all(File.join(Base.source_dir, 'data', 'issues')).each do |issue|
  #make dir for issue
  directory = File.join Base.dest_dir, issue.id
  FileUtils.mkdir(directory) unless Dir.exist?(directory)

  #write issue
  File.write(
    File.join(directory + '.html'),
    issue.render('show-issue')
  )

  #write stories
  issue.stories.each do |story|
    File.write(
      File.join(directory, (story.id + '.html')),
      story.render('show-post')
    )
  end
end

Static.all(File.join(Base.source_dir, 'data', 'static')).each do |static|
  File.write(
    File.join(Base.dest_dir, (static.id + '.html')),
    static.render('show-static')
  )
end
